/* --------------------- */
/* Custom Propperties */
/* --------------------- */

:root {
  /* colors */
  --clr-dark: 230 35% 7%;
  --clr-light: 231 77% 90%;
  --clr-white: 0 0% 100%;

  /* font-sizes */
  /* clamp is setting a minimum size, middle size to grow from and a max size */
  --fs-900: clamp(5rem, 8vw + 1rem, 9.375rem);
  --fs-800: 3.5rem;
  --fs-700: 1.5rem;
  --fs-600: 1rem;
  --fs-500: 1.75rem;
  --fs-400: 0.9375rem;
  --fs-300: 1rem;
  --fs-200: 0.875rem;

  /* font-families */
  --ff-serif: "Bellefair", serif;
  --ff-sans-cond: "Barlow Condensed", sans-serif;
  --ff-sans-normal: "Barlow", sans-serif;
}

@media (min-width: 35rem) {
  :root {
    --fs-800: 5rem;
    --fs-700: 2.5rem;
    --fs-600: 1.5rem;
    --fs-400: 1rem;
  }
}

@media (min-width: 45rem) {
  :root {
    /* font-sizes */
    --fs-800: 6.25rem;
    --fs-700: 3.5rem;
    --fs-600: 2rem;
    --fs-400: 1.125rem;
  }
}

/* --------------------- */
/* RESET */
/* --------------------- */

/* https://piccalil.li/blog/a-modern-css-reset/ */

/* Box Sizing */
*,
*::before,
*::after {
  box-sizing: border-box;
}

/* Reset Margins */

body,
h1,
h2,
h3,
h4,
h5,
h6,
p,
figure,
picture {
  margin: 0;
}

h1,
h2,
h3,
h4,
h5,
h6,
p {
  font-weight: 400;
}

/* set up the body */

body {
  font-family: var(--ff-sans-normal);
  font-size: var(--fs-400);
  color: hsl(var(--clr-white));
  background-color: hsl(var(--clr-dark));
  line-height: 1.5;
  min-height: 100vh;
  /* w/ the min-height, grid will take up the rest of the space */
  display: grid;
  /*creating 2 rows for min size for content one one for remaining space */
  grid-template-rows: min-content 1fr;
  /* in case resizing shows the mobile menu off to the side */
  overflow-x: hidden;
}

/* make images easier to work with */

img,
picture {
  max-width: 100%;
  display: block;
}

/* make forms easier to work with */

input,
button,
textarea,
select {
  font: inherit;
}

/* remove animations for people who have turned them off */

@media (prefers-reduced-motion: reduce) {
  *,
  *::before,
  *::after {
    animation-duration: 0.01ms !important;
    animation-iteration-count: 1 !important;
    transition-duration: 0.01ms !important;
    scroll-behavior: auto !important;
  }
}

/* GENERAL */

/* ------------------- */
/*   Utility Classes   */
/* ------------------- */

.flex {
  display: flex;
  /* sets a default property, but also allows for use of a 
    variable later on, on a different class that might be included in addition to this class on
    an element*/
  gap: var(--gap, 1rem);
}

.grid {
  display: grid;
  gap: var(--gap, 1rem);
}

.d-block {
  display: block;
}

/* adjacent combinator " * + * " 
looks at each child because of the > and then checks
to see if it has an adjacent "sibling" that comes before it
if it doesn't, then it doesn't apply the style */
.flow > * + * {
  /* variable flow space OR 1 rem default */
  margin-top: var(--flow-space, 1rem);
}

.container {
  /* newer CSS option for looking at the inline of the container */
  padding-inline: 2em;
  /* similar to padding replaces "0 auto" */
  margin-inline: auto;
  max-width: 80rem;
}

.grid-container {
  text-align: center;
  display: grid;
  /* grid specific centering both top and bottom elements within their top and bottom space as well as horizontally
  place-content would do something similar but doesn't space the items apart vertically, so 
  you would use a row-gap w/ it to create space */
  place-items: center;
  /* padding-line adding padding horizontally (naturally, but can do vertical if it makes sense
  for the element) */
  padding-inline: 1rem;
}

.grid-container * {
  /* max width of X characters -- roughly equivalent to the zero 0 character in width */
  max-width: 50ch;
}

@media (min-width: 45rem) {
  .grid-container {
    text-align: left;
    column-gap: var(--container-gap, 2rem);
    /* 2 columns of 2remm or as much space as is available, then repeat 2 times the min/max and then another column of 2em
          for a total of 4 columns */
    grid-template-columns: minmax(2rem, 1fr) repeat(2, minmax(0, 40rem)) minmax(
        2rem,
        1fr
      );
  }
  .grid-container > *:first-child {
    grid-column: 2;
  }

  .grid-container > *:last-child {
    grid-column: 3;
  }
  .grid-container--home {
    /* using max here is nice for people on a very large screen.  This stops the element from being
    way down at the bottom of a screen and moves it more to the lower-third.  */
    padding-bottom: max(6rem, 20vh);
    align-items: end;
  }
}

/* setup for screen readers only */
/* visually hides content unless being unless the person is using
a screen reader */

.sr-only {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap; /* added line */
  border: 0;
}

/* COLORS */

.bg-dark {
  background-color: hsl(var(--clr-dark));
}
.bg-accent {
  background-color: hsl(var(--clr-light));
}
.bg-white {
  background-color: hsl(var(--clr-white));
}

.text-dark {
  color: hsl(var(--clr-dark));
}
.text-accent {
  color: hsl(var(--clr-light));
}
.text-white {
  color: hsl(var(--clr-white));
}

/* typography */

.ff-serif {
  font-family: var(--ff-serif);
}
.ff-sans-cond {
  font-family: var(--ff-sans-cond);
}
.ff-sans-normal {
  font-family: var(--ff-sans-normal);
}

.letter-spacing-1 {
  letter-spacing: 4.75px;
}
.letter-spacing-2 {
  letter-spacing: 2.7px;
}
.letter-spacing-3 {
  letter-spacing: 2.35px;
}

.uppercase {
  text-transform: uppercase;
}

.fs-900 {
  font-size: var(--fs-900);
}
.fs-800 {
  font-size: var(--fs-800);
}
.fs-700 {
  font-size: var(--fs-700);
}
.fs-600 {
  font-size: var(--fs-600);
}
.fs-500 {
  font-size: var(--fs-500);
}
.fs-400 {
  font-size: var(--fs-400);
}
.fs-300 {
  font-size: var(--fs-300);
}
.fs-200 {
  font-size: var(--fs-200);
}

.fs-900,
.fs-800,
.fs-700,
.fs-600 {
  line-height: 1.1;
}

.numbered-title {
  font-family: var(--ff-sans-cond);
  font-size: var(--fs-500);
  text-transform: uppercase;
  letter-spacing: 4.72px;
}

.numbered-title span {
  margin-right: 0.5em;
  font-weight: 700;
  color: hsl(var(--clr-white) / 0.25);
}

/* ------------------- */
/*     Components      */
/* ------------------- */

.large-button {
  /* never changes font size throughout the different media queries */
  font-size: 2rem;
  position: relative;
  /* display grid because this is a link, which is an in-line element
    and height doesn't work the same and simplifies centering our text. 
    
    eventually changed to inline-grid instead of grid for actual page vs design-system
    this makes it behave as a block element inside and an inline element outside, so that 
    we still have the centered text*/
  display: inline-grid;
  /* force new stacking context to be used with the pseduo element
    keeps anything like a background image on the site from causing weird
    issues later on */
  z-index: 1;
  /* shorthand for alight-items/justify-items */
  place-items: center;
  padding: 0 2em;
  border-radius: 50%;
  /* modern CSS solution that turns this element into a square
    it is width / height ration, but 1/1 is represented as just 1 */
  aspect-ratio: 1;
  text-decoration: none;
}

.large-button::after {
  content: "";
  position: absolute;
  z-index: -1;
  width: 100%;
  height: 100%;
  background: hsl(var(--clr-white) / 0.15);
  border-radius: inherit;
  opacity: 0;
  transition: opacity 750ms linear, transform 500ms ease-in-out;
}

.large-button:hover::after,
.large-button:focus::after {
  opacity: 1;
  transform: scale(1.5);
}

.primary-navigation {
  --underline-gap: 2rem;
  list-style: none;
  padding: 0;
  margin: 0;
  background: hsl(var(--clr-dark) / 0.95);
  /* backdrop-filter: blur(2rem); */
}

.mobile-nav-toggle {
  display: none;
}

/* checks feature support for a property and value in case a particular 
browswer doesn't yet support something like 'backdrop-filter w/ blur()' */
@supports (backdrop-filter: blur(1.5rem)) {
  .primary-navigation {
    background: hsl(var(--clr-white) / 0.05);
    backdrop-filter: blur(2rem);
  }
}

.primary-navigation a {
  text-decoration: none;
}

.primary-navigation a > span {
  font-weight: 700;
  margin-right: 0.5em;
}

/* selecting every direct descendent so that this can be used on other components */
.underline-indicators > * {
  cursor: pointer;
  padding: var(--underline-gap, 1rem) 0;
  /* removes any border that may exist before adding new borders
    ---useful for removing borders on the buttons */
  border: 0;
  border-bottom: 0.2rem solid hsl(var(--clr-white) / 0);
}

.underline-indicators > li:hover,
.underline-indicators > button:hover,
/* .underline-indicators > a:hover, */
/* .underline-indicators > span:hover, */
/* .underline-indicators > span:focus, */
/* .underline-indicators > a:focus, */
.underline-indicators > button:focus, 
.underline-indicators > li:focus {
  border-bottom: 0.2rem solid hsl(var(--clr-white) / 0.5);
}

.underline-indicators > li.active,
.underline-indicators > [aria-selected="true"] {
  color: hsl(var(--clr-white) / 1);
  border-color: hsl(var(--clr-white) / 1);
}

/* Primary navigation menu for mobile screen sizes */
@media (max-width: 35rem) {
  .primary-navigation {
    --underline-gap: 0.5rem;
    position: fixed;
    z-index: 1000;
    /* top, left, bottom, right */
    inset: 0 0 0 30%;
    list-style: none;
    padding: min(20rem, 10vh) 2rem;
    margin: 0;
    flex-direction: column;
    /* moves it to the right 100% so that it is no longer visible */
    transform: translateX(100%);
    transition: transform 500ms ease-in-out;
  }
  .primary-navigation[data-visible="true"] {
    transform: translateX(0);
  }

  /*  * isn't working for all for some reason */
  .primary-navigation.underline-indicators > .active,
  .primary-navigation.underline-indicators > a,
  .primary-navigation.underline-indicators > ul,
  .primary-navigation.underline-indicators > li {
    border: 0;
  }
  .mobile-nav-toggle {
    /* the button has a display: none on the larger screen sizes to remove it from the DOM
    this adds it back to the DOM as a block level element, but then we don't actually want to see
    the button, so we set it to background: transparent and border: 0 */
    display: block;
    position: absolute;
    z-index: 2000;
    right: 1.5rem;
    top: 2rem;
    background: transparent;
    /* bring in the hamburger icon to use as a visual instead of the button and set it to no-repeat
    because it was looking funky.  width and aspect ration make it a 1.5rem square */
    background: center;
    background-image: url(./assets/shared/icon-hamburger.svg);
    background-repeat: no-repeat;
    width: 1.5rem;
    aspect-ratio: 1;
    border: 0;
  }
  .mobile-nav-toggle[aria-expanded="true"] {
    background-image: url(./assets/shared/icon-close.svg);
    transition: background-image 200ms ease-in-out;
  }
  .mobile-nav-toggle:focus-visible {
    outline: 5px solid white;
    outline-offset: 5px;
  }
}

.tab-list {
  gap: 2rem;
}

.dot-indicators > * {
  cursor: pointer;
  border: 0;
  border-radius: 50%;
  aspect-ratio: 1;
  padding: 0.5em;
  background-color: hsl(var(--clr-white) / 0.25);
}

.dot-indicators > button:hover,
.dot-indicators > button:focus {
  background-color: hsl(var(--clr-white) / 0.5);
}

.dot-indicators > [aria-selected="true"] {
  background-color: hsl(var(--clr-white) / 1);
}

.number-indicators > * {
  cursor: pointer;
  border: 0;
  width: 4.5rem;
  border-radius: 50%;
  aspect-ratio: 1;
  /* padding: 2.5rem; */
  margin-left: 8rem;
  border: 1px solid hsl(var(--clr-white) / 0.25);
}

.number-indicators > button:hover,
.number-indicators > button:focus {
  border-color: hsl(var(--clr-white) / 1);
  background-color: hsl(var(--clr-dark));
  color: hsl(var(--clr-white) / 1);
}

.number-indicators > [aria-selected="true"] {
  background-color: hsl(var(--clr-white) / 1);
  color: hsl(var(--clr-dark));
}

/* ---------------------------- */
/*   Page specific backgrounds   */
/* ---------------------------- */

body {
  background-size: cover;
  background-position: bottom center;
}

/* Home */

.home {
  background-image: url(./assets/home/background-home-mobile.jpg);
}

@media (min-width: 35rem) {
  .home {
    background-position: center center;
    background-image: url(./assets/home/background-home-tablet.jpg);
  }
}

@media (min-width: 45rem) {
  .home {
    background-image: url(./assets/home/background-home-desktop.jpg);
  }
}
